/******************************************************************************************************************************************************************************************************************************************************** 
 * Config.h
 * 
 * ToDo[PS]-  Need to insert comments
*********************************************************************************************************************************************************************************************************************************************************/


#ifndef _CONTROL_APPL_H
#define _CONTROL_APPL_H


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Headers includes 
*********************************************************************************************************************************************************************************************************************************************************/
#include "config.h"


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Libraries includes 
*********************************************************************************************************************************************************************************************************************************************************/


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Defines 
*********************************************************************************************************************************************************************************************************************************************************/


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Data Types 
*********************************************************************************************************************************************************************************************************************************************************/
typedef enum {
    SMC_State_Idle = 0,
    SMC_State_Set_Module = 1,
    SMC_State_Read_Module = 2,
    SMC_State_Error = 3,
}SMC_States_t;


typedef struct{
    SMC_States_t SMC_State =  SMC_State_Idle;   /* Variável de estado da máquina de enviar frame (Frame Sending Machine) */
}Control_t;

/******************************************************************************************************************************************************************************************************************************************************** 
    ### Constants
*********************************************************************************************************************************************************************************************************************************************************/


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Functions Prototypes 
*********************************************************************************************************************************************************************************************************************************************************/
void Control_appl_SMC( Control_t * );
void Control_appl_Request_ChangeOf_SMC_State( Control_t *, SMC_States_t );
void Control_appl_Set_Module( void );
void Control_appl_Get_Module_Status( void );

#endif
