/******************************************************************************************************************************************************************************************************************************************************** 
 * Comm_protocol.h
 * 
 * ToDo[PS]-  Need to insert comments
*********************************************************************************************************************************************************************************************************************************************************/


#ifndef _COMM_PROTOCOL_H
#define _COMM_PROTOCOL_H


/********************************************************************************************************************************************************************************************************************************************************
    ### Headers includes 
*********************************************************************************************************************************************************************************************************************************************************/
#include "Config.h"


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Libraries includes 
*********************************************************************************************************************************************************************************************************************************************************/ 


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Defines 
*********************************************************************************************************************************************************************************************************************************************************/
#define _FRAME_MAX_DATA_SIZE (24)
#define _RX_BUFFER_SIZE (64)
#define _TX_BUFFER_SIZE (64)

#define _BREAK   (0U)
#define _SYNCH   (1U)
#define _SID     (2U)
#define _TYPE    (3U)
#define _ID_SRC  (4U)
#define _ID_TRG  (5U)
#define _LENGHT  (6U)
#define _DATA    (7U)

/* Range de valores referentes ao campo _TYPE */
#define _TYPE_MODULE_PLUG   (0x02)
#define _TYPE_MODULE_LIGHT  (0x03)
/* Range de valores referentes ao campo _DATA */
#define _DATA_D0  (7U)
#define _DATA_D1  (8U)
#define _DATA_D2  (9U)
#define _DATA_D3  (10U)
#define _DATA_D4  (11U)
#define _DATA_D5  (12U)
#define _DATA_D6  (13U)
#define _DATA_D7  (14U)
#define _DATA_D8  (15U)
#define _DATA_D9  (16U)
#define _DATA_D10 (17U)
#define _DATA_D11 (18U)
#define _DATA_D12 (19U)
#define _DATA_D13 (20U)
#define _DATA_D14 (21U)
#define _DATA_D15 (22U)
#define _DATA_D16 (23U)
#define _DATA_D17 (24U)
#define _DATA_D18 (25U)
#define _DATA_D19 (26U)
#define _DATA_D20 (27U)
#define _DATA_D21 (28U)
#define _DATA_D22 (29U)
#define _DATA_D23 (30U)
#define _DATA_D24 (31U)


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Data Types 
*********************************************************************************************************************************************************************************************************************************************************/
typedef struct {
  byte Break = 0x00;                 /* Break signal */
  byte Synch = 0x55;                 /* Synch signal */
  byte SID = 0x01;                   /* Identificador de serviço da mensagem */
  byte Type = 0x01;                  /* Tipo de módulo do transmissor */
  byte Id_Source = 0x01;             /* ID do módulo transmissor */
  byte Id_Target = 0xFF;             /* ID do módulo alvo */
  byte Lenght = 0x01;                /* Comprimento da mensagem */
  byte Data[_FRAME_MAX_DATA_SIZE];   /* Dados */
  byte Checksum = 0x00;              /* Checksum */
}Frame_t;

struct Slot{
  Frame_t frame;
  Slot *nextSlot;
};

typedef struct Slot Slot_t;

typedef byte RxBuffer_t[_RX_BUFFER_SIZE];
typedef byte TxBuffer_t[_TX_BUFFER_SIZE];


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Constants
*********************************************************************************************************************************************************************************************************************************************************/


/******************************************************************************************************************************************************************************************************************************************************** 
    ### Functions Prototypes 
*********************************************************************************************************************************************************************************************************************************************************/
int Comm_protocol_Frame_Send_Request( TxBuffer_t *, int );
int Comm_protocol_Frame_Read_Request( TxBuffer_t *, int );

int Comm_protocol_Get_TxFIFO_Length( void );
int Comm_protocol_Get_RxFIFO_Length( void );


#endif
