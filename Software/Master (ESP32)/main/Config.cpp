/********************************************************************************************************************************************************************************************************************************************************
 * Fish Tank automation project - TCC -  Config file
 * Developer: Pablo
 * 
 * ToDo[PS] - need to improve the comments
*********************************************************************************************************************************************************************************************************************************************************/


/********************************************************************************************************************************************************************************************************************************************************
    ### Headers includes 
*********************************************************************************************************************************************************************************************************************************************************/
#include "General_types.h"
#include "Config.h"


/********************************************************************************************************************************************************************************************************************************************************
    ### Global Variables into this scope (this file *.c) 
*********************************************************************************************************************************************************************************************************************************************************/
static char wifi_STA_SSID[SSID_SIZE] = "Oliani";
static char wifi_STA_PASSWORD[PASSWORD_SIZE] = "11041990";
static const char * wifi_AP_SSID = "Aquarium";
static const char * wifi_AP_PASSWORD = "Aquarium"; 


/********************************************************************************************************************************************************************************************************************************************************
  @Brief: Setting GPIOs
*********************************************************************************************************************************************************************************************************************************************************/
void Config_configGPIO()
{
    pinMode(LED_ON_BOARD, OUTPUT);
}


/********************************************************************************************************************************************************************************************************************************************************
  @Brief: Setting UARTs
*********************************************************************************************************************************************************************************************************************************************************/
void Config_configUART()
{
    /* Setting UART0 - Used to debug */
    Serial.begin(19200);
    if( DEBUG ){
        Serial.printf("SDK version using ESP object: %s\n", ESP.getSdkVersion()); /* Using ESP object */
        Serial.printf("SDK version using low level function: %s\n", esp_get_idf_version()); /* Using low level function */
    } 
    /* Setting UART2 - Used to serial communication whith slaves modules */
    Serial2.begin(19200);
    uart_set_line_inverse(UART_ID, UART_INVERSE_TXD);  /* Invert level of Tx line */
    gpio_set_pull_mode(RXD_PIN, GPIO_FLOATING);  /* Turn-off pull-up and pull-down of UART RX pin */
}


/********************************************************************************************************************************************************************************************************************************************************
  @Brief: Setting Wifi
*********************************************************************************************************************************************************************************************************************************************************/
void Config_configWIFI(void (*fCallback)(WiFiEvent_t, WiFiEventInfo_t info), EventGroupHandle_t * event_group)
{
    WiFi.onEvent(fCallback);
    wifi_init_sta();
}


/********************************************************************************************************************************************************************************************************************************************************
  Descrição: Função que configura e inicializa o driver WiFi do ESP no modo Station
*********************************************************************************************************************************************************************************************************************************************************/
void wifi_init_sta( void )
{
    WiFi.disconnect();
    delay(500);
    WiFi.begin(wifi_STA_SSID, wifi_STA_PASSWORD);
}


/********************************************************************************************************************************************************************************************************************************************************
  Descrição: Função que configura e inicializa o driver WiFi do ESP no modo AP (Access Point)
*********************************************************************************************************************************************************************************************************************************************************/
void wifi_init_ap( void )
{
    Serial.println("Inicializando Modo AP");
    WiFi.disconnect();
    delay(500);
    WiFi.softAP(wifi_AP_SSID, wifi_AP_PASSWORD);
}
